---
// i18n
import { t } from "astro-i18n";

// undgå at siden bliver præ-renderet
export const prerender = false;

import "../styles/global.css";
import { Image } from "astro:assets";
import Layout from "../layouts/Layout.astro";

// Billeder og Illustrationer
import RunningImage from "../assets/img/running-img.webp";
import RunningCoffeeCupIllustration from "../assets/illustrations/blue/running-coffee-cup.svg";
import LemonPiecesIllustration from "../assets/illustrations/blue/lemon-pieces.svg";

// Komponenter
import PopUp from "../components/PopUp.astro";
import Button from "../components/Button.astro";
import RunningClubCard from "../components/runningclub/RunningClubCard.astro";
import Accordion from "../components/runningclub/Accordion.astro";

// API
import { months } from "./api/clubevents";

// Konstant for at hente den måned fra URL-parameteren eller bruge den nuværende måned som standard
const month = Astro.url.searchParams.get("month") || months[new Date().getMonth()];

// Fetch events from our API
const events = await fetch(new URL(`/api/clubevents?month=${month}`, Astro.url))
  .then((res) => res.json())
  .catch(() => []);

const faqItems = [
  {
    question: t("Hvor mødes vi?"),
    answer: t("Vi mødes ved Kær Kaffebar, Valby Lannggade 86C, 2500 Valby."),
  },
  {
    question: t("Hvad gør jeg, hvis jeg ikke kan komme alligevel?"),
    answer: t("Hvis du efter tilmelding finder ud af, at du ikke kan komme alligevel, så skriv til nummeret: 81610900 mindst 24 timer inden, så vi ved, hvor mange vi skal regne med."),
  },
  {
    question: t("Får man gratis kaffe?"),
    answer: t("Nej vi giver desværre ikke gratis kaffe, men vi giver et ingefærshot og super hyggelig stemning. Kaffebaren er selvfølgelig åben, så man er mere end velkommen til at nyde mad eller drikkevarer udenfor ved vores café borde eller inden i vores hyggelig lokale."),
  },
  {
    question: t("Hvordan ser ruten ud i søndermarken?"),
    answer: null
  }
];

const requestSend = Astro.url.searchParams.get("requestSend") ? true : false;
---

<Layout title={t("Løbeklub | Kær Kaffebar")}>
  <main class="grid gap-negative m-margin text-neutral-1">
    <section class="grid md:grid-cols-2 relative mb-negative md:mb-section">
      <header>
        <h1 class="text-header-1 font-header">{t("Kær løbeklub")}</h1>
        <h3 class="text-header-3 font-body-text leading-height-header-3">
          {t("Kær Klubben's løbeklub i Valby har")} <strong
            >{t("fokus på det sociale og på at samle lokalsamfundet")}</strong
          >, {t("samtidig med at vi bevæger os.")} <strong
            >{t("Ruten i søndermarken er 2,5 km, så alle kan være med.")}</strong
          >  {t("Er man hurtig, kan man nå den 2 gange!")}
        </h3>
      </header>
      <Image
        src={RunningCoffeeCupIllustration}
        alt={t("løbende kaffekop illustration")}
        class="absolute w-[130px] right-1 top-[14rem] md:top-[0rem] z-[-10] md:w-[400px]"
        loading="eager"
      />
    </section>
    <section class="lg:flex lg:flex-row gap-negative sm:space-y-section">
      <div class="grid gap-default flex-shrink-0">
        <div class="flex flex-col items-start gap-default">
          <h2 class="text-header-2 font-body-text leading-height-header-2">{t("Kommende ture")}</h2>
          <div>
            <label for="month-filter" class="sr-only">{t("Vælg måned")}</label>
            <select 
              id="month-filter"
              aria-label={t("Filtrer begivenheder efter måned")}
              class="border border-accent p-[8px] rounded-md color-accent"
            >
            {
              [
                t("Januar"),
                t("Februar"),
                t("Marts"),
                t("April"),
                t("Maj"),
                t("Juni"),
                t("Juli"),
                t("August"),
                t("September"),
                t("Oktober"),
                t("November"),
                t("December"),
              ].map((m, idx) => (
                <option
                  value={months[idx]}
                  selected={months[idx] === month}
                  class="text-accent-2 font-body-text text-paragraph"
                >
                  {m}
                </option>
              ))
            }
            </select>
            <div class="select-arrow"></div>
          </div>
        </div>
        <PopUp show={requestSend} id="popup-confirmation">
          <h3 class=" text-center text-header-3 leading-height-header-3 text-neutral-1 font-body-text" id="confirmation">{t("Tak for din tilmelding!")}</h3>
        </PopUp>
        <!-- Mapping events from API -->
        {
          events.length === 0 ? (
            <p class="text-label">{t("Ingen kommende ture")}</p>
          ) : (
            events.map((event) => (
            <PopUp show={false} id={`popup-${event.id}`}>
              <form id="requestRunning" novalidate method="POST" action="/api/clubevents" class="flex flex-col gap-default">
                <h3 class="font-body-text text-header-3 leading-height-header-3 text-neutral-1">{t("Tilmelding")}</h3>
              <div class="flex flex-col gap-small">
                <label for={`name-${event.id}`}>{t("Fulde navn")}*</label>
                <input
                    id={`name-${event.id}`}
                    name="name"
                    type="text"
                    autocomplete="name"
                    placeholder={t("Navn")}
                    aria-invalid="false"
                    aria-errormessage="nameError"
                    class="border-1 border-faded-highlight rounded-sm p-2 bg-white"
                    required
                    />
                    <span id={`numberError-${event.id}`} class="error-message hidden name-error" role="alert"></span>
              </div>
              <div class="flex flex-col gap-small">
               <label for={`number-${event.id}`}>{t("Telefonnummer")}*</label>
                  <input
                    id={`number-${event.id}`}
                    type="tel"
                    name="number"
                    placeholder={t("Telefonnummer")}
                    class="border-1 border-faded-highlight rounded-sm p-2 bg-white"
                    autocomplete="tel"
                    aria-invalid="false"
                    aria-errormessage="numberError"
                    pattern="[0-9+]{8,}"
                    inputmode="numeric"
                    required
                  />
                  <span id={`numberError-${event.id}`} class="error-message hidden number-error" role="alert"></span>
                  <!-- Hidden input to pass event ID -->
                  <input type="hidden" name="eventId" value={event.id} />
              </div>
                <Button type="submit" showArrow={false}> 
                  {t("Tilmeld")}
                </Button>
              </form>
            </PopUp>
              <RunningClubCard event={event} popupId={`popup-${event.id}`} />
            ))
          )
        }
        <p>
          <strong
            >{t("OBS: ved afmeldning skriv til nummeret: 81 61 09 00 mindst 24 timer inden.")}</strong
          >
        </p>
      </div>

      <div class="flex flex-col items-center mt-[5rem]">
        <h2 class="font-header text-header-2">{t("FAQ")}</h2>
        <Accordion items={faqItems}/>
      </div>
    </section>
    <section class="flex flex-col lg:flex-row gap-large mb-large">
      <div
        class="h-[140px] sm:h-[180px] md:h-[200px] lg:h-[60%] overflow-hidden rounded-full lg:w-[100%]"
      >
        <Image
          src={RunningImage}
          alt={t("billeder-af-to-piger-med-en-løbeklub-t-shirt")}
          class="object-cover w-full h-full object-bottom"
          loading="eager"
        />
      </div>
      <div class="relative h-[250px]">
        <h2 class="text-accent text-header-2 leading-header-2 text-center font-body-text">
          {t("Hos Kær Kaffebar handler det ikke kun om tempo, men om fællesskab og lokale bånd.")}
        </h2>
        <Image
          src={LemonPiecesIllustration}
          alt={t("illustration af citroner")}
          class="absolute bottom-0 right-0 z-[-10]"
          loading="lazy"
        />
      </div>
    </section>
  </main>
</Layout>

<style>
  /* Error farve*/
  .error-message {
    color: var(--color-secondary);
  }
  .error-message.hidden {
    display: none;
  }
  /*Invalide felter */
  input.invalid,
  textarea.invalid {
    border: 2px solid var(--color-secondary) !important;
  }

  /*Valide felter. Anvender pseudo valid og sætter invalid til false (kigger i vores script).
   !important bruger vi til at vise stilen tydeligt */
  input:valid[aria-invalid="false"],
  textarea:valid[aria-invalid="false"] {
    border: 2px solid var(--color-accent) !important;
  }
</style>

<script is:inline>
  document.addEventListener("DOMContentLoaded", () => {
    // Find alle løbeklubsformularer
    const forms = document.querySelectorAll('form[id^="requestRunning"]');
    
    forms.forEach(form => {
      let submitted = false;
      
      // Brug klasser i stedet for id'er
      const nameField = form.querySelector('input[name="name"]');
      const numberField = form.querySelector('input[name="number"]');
      const nameError = form.querySelector('.name-error');
      const numberError = form.querySelector('.number-error');

      form.addEventListener("submit", (e) => {
        e.preventDefault();
        submitted = true;
        let allValid = true;

        // Valider navn
        if (!nameField.checkValidity()) {
          allValid = false;
          nameField.classList.add("invalid");
          nameField.setAttribute("aria-invalid", "true");
          nameError.classList.remove("hidden");
          nameError.textContent = "Fulde navn er påkrævet";
        } else {
          nameField.classList.remove("invalid");
          nameField.setAttribute("aria-invalid", "false");
          nameError.classList.add("hidden");
        }

        // Valider telefonnummer
        if (!numberField.checkValidity()) {
          allValid = false;
          numberField.classList.add("invalid");
          numberField.setAttribute("aria-invalid", "true");
          numberError.classList.remove("hidden");
          
          if (numberField.validity.patternMismatch) {
            numberError.textContent = "Ugyldigt telefonnummer";
          } else {
            numberError.textContent = numberField.validationMessage;
          }
        } else {
          numberField.classList.remove("invalid");
          numberField.setAttribute("aria-invalid", "false");
          numberError.classList.add("hidden");
        }

        if (allValid) form.submit();
      });

      [nameField, numberField].forEach(field => {
        field.addEventListener("input", () => {
          if (!submitted) return;

          const errorSpan = field === nameField ? nameError : numberError;
          
          if (field.checkValidity()) {
            field.classList.remove("invalid");
            field.setAttribute("aria-invalid", "false");
            errorSpan.classList.add("hidden");
          } else {
            field.classList.add("invalid");
            field.setAttribute("aria-invalid", "true");
            errorSpan.classList.remove("hidden");
            
            if (field === numberField && field.validity.patternMismatch) {
              errorSpan.textContent = "Indtast 8 cifre uden mellemrum, eller brug +45 foran";
            } else {
              errorSpan.textContent = field.validationMessage;
            }
          }
        });
      });
    });
  });
</script>