---
// src/components/Header.astro
import Logo from "../assets/img/kaer-logo.png";
import PrimaryButton from "./PrimaryButton.astro";
import AnchorLink from "./AnchorLink.astro";
import Button from "./Button.astro";
---

<header class="fixed top-0 z-50 w-full">
  <div class="bg-primary text-bright-bg p-default m-default shadow-pink rounded-large">
    <div class="flex flex-wrap justify-between items-center">
      <!-- Logo -->
      <a href="/"><img src={Logo.src} class="h-6 w-auto md:h-10" alt="Kær Kaffebar logo" /></a>

      <!-- Desktop Navigation -->
      <nav class="hidden lg:block">
        <ul class="flex items-center gap-large">
          <li><AnchorLink url="/menu">Menu</AnchorLink></li>
          <li><AnchorLink url="/afternoontea">Afternoon Tea</AnchorLink></li>
          <li><AnchorLink url="/arrangement">Arrangement & event</AnchorLink></li>
          <li><AnchorLink url="/runningclub">Kær løbeklub</AnchorLink></li>
          <li><Button variant="primary" url="https://kaerkaffebar.superbexperience.com/" ariaLabel="tilmeld dig løbeklub">Book bord</Button></li>
          <li class="text-sm">DK / EN</li>
        </ul>
      </nav>

      <!-- Mobile Navigation Controls -->
      <div class="flex items-center gap-2 lg:hidden">
        <Button variant="primary" url="https://kaerkaffebar.superbexperience.com/" ariaLabel="tilmeld dig løbeklub">Book bord</Button>
        <button id="mobile-menu-button" class="p-2 focus:outline-none" aria-label="Toggle menu">
          <svg class="w-10 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
          </svg>
        </button>
      </div>
    </div>

    <!-- Mobile Menu Dropdown -->
    <nav id="mobile-menu" class="hidden absolute right-0 top-[6em] z-40 bg-primary p-burger-menu border-faded-highlight border-2 rounded-large m-default">
      <ul class="flex flex-col items-center gap-default font-bold">
        <li class="menu-item pb-default pt-default">
          <AnchorLink url="/menu">Menu</AnchorLink>
        </li>
        <li class="menu-item pb-default pt-default">
          <AnchorLink url="/afternoontea">Afternoon Tea</AnchorLink>
        </li>
        <li class="menu-item pb-default">
          <AnchorLink url="/arrangement">Arrangement & event</AnchorLink>
        </li>
        <li class="menu-item pb-default">
          <AnchorLink url="/runningclub">Kær løbeklub</AnchorLink>
        </li>
      </ul>
    </nav>
  </div>
</header>

<script is:inline type="module">
  import gsap from "https://cdn.jsdelivr.net/npm/gsap@3.12.5/index.js";

  const menuButton = document.getElementById("mobile-menu-button");
  const mobileMenu = document.getElementById("mobile-menu");
  let isOpen = false;

  function openMenu() {
    // show the menu container
    mobileMenu.classList.remove("hidden");

    // animate the container
    gsap.fromTo(
      mobileMenu,
      { scale: 0.95, opacity: 0 },
      {
        scale: 1,
        width: "90%",
        height: "auto",
        opacity: 1,
        duration: 0.4,
        ease: "expo.out",
        onComplete: animateItems,
      }
    );

    function animateItems() {
      const items = mobileMenu.querySelectorAll(".menu-item");
      gsap.fromTo(items, { y: 20, opacity: 0 }, { y: 0, opacity: 1, duration: 0.3, stagger: 0.1, ease: "power2.out" });
    }

    isOpen = true;
  }

  function closeMenu() {
    const items = mobileMenu.querySelectorAll(".menu-item");
    // hide items first
    gsap.to(items, { opacity: 0, duration: 0.2 });
    // then hide container
    gsap.to(mobileMenu, {
      width: 0,
      height: 0,
      scale: 0.95,
      opacity: 0,
      duration: 0.3,
      onComplete: () => {
        mobileMenu.classList.add("hidden");
        // reset inline styles GSAP put on container
        gsap.set(mobileMenu, { clearProps: "all" });
      },
    });
    isOpen = false;
  }

  menuButton.addEventListener("click", () => (isOpen ? closeMenu() : openMenu()));

  // click outside to close
  document.addEventListener("click", (e) => {
    if (isOpen && !menuButton.contains(e.target) && !mobileMenu.contains(e.target)) {
      closeMenu();
    }
  });
</script>
